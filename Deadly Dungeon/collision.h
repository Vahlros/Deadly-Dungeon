#pragma once
#include "data.h"
#include "weapon.h"

//Checks intersections between tile rectangles, which are generated by finding out the tileID that is infront of a given point.
//First I find the direction of movement, and then I create collision rectangles based on the tileID that is slightly 
//infront of the left and right points (of the entity's collisionBox) that are moving in that direction.
//Example: When movingDown, leftPoint is the bottom right and rightPoint is the bottom left of the entity's collisionBox,
//leftTileRect is created using dimensions of the tileID infront of leftPoint, then I check for an intersection
void CheckMapCollision(const GameData& game, const int& type, sf::Sprite& sprite, Weapon& weapon, Dim2Df& frameMovementVector, Projectile& projectile);

//Game constants
namespace GC
{
	//Collision: General
	const unsigned char FEET_COLLISION_HEIGHT = 2; //Feet collision box height
	const unsigned char C_OFFSET = 1; //Offset for smooth collision
	const unsigned char ENEMY_ATTACK_C_OFFSET = 3; //Offset for better body attack collision
}